//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIA_Universitas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SIAEntities : DbContext
    {
        public SIAEntities()
            : base("name=SIAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<Acd_App_Sk> Acd_App_Sk { get; set; }
        public virtual DbSet<Acd_Class_Lecturer> Acd_Class_Lecturer { get; set; }
        public virtual DbSet<Acd_Course> Acd_Course { get; set; }
        public virtual DbSet<Acd_Course_Classical> Acd_Course_Classical { get; set; }
        public virtual DbSet<Acd_Course_Curriculum> Acd_Course_Curriculum { get; set; }
        public virtual DbSet<Acd_Course_Group> Acd_Course_Group { get; set; }
        public virtual DbSet<Acd_Course_Identic> Acd_Course_Identic { get; set; }
        public virtual DbSet<Acd_Course_Identic_Detail> Acd_Course_Identic_Detail { get; set; }
        public virtual DbSet<Acd_Course_Lecturer> Acd_Course_Lecturer { get; set; }
        public virtual DbSet<Acd_Course_Sched> Acd_Course_Sched { get; set; }
        public virtual DbSet<Acd_Course_Sched_Description> Acd_Course_Sched_Description { get; set; }
        public virtual DbSet<Acd_Course_Sched_TIME> Acd_Course_Sched_TIME { get; set; }
        public virtual DbSet<Acd_Course_Type> Acd_Course_Type { get; set; }
        public virtual DbSet<Acd_Curriculum_EKUIVALENSI> Acd_Curriculum_EKUIVALENSI { get; set; }
        public virtual DbSet<Acd_Curriculum_EKUIVALENSI_KHS_LAMA> Acd_Curriculum_EKUIVALENSI_KHS_LAMA { get; set; }
        public virtual DbSet<Acd_Curriculum_EKUIVALENSI_TRANSKRIP> Acd_Curriculum_EKUIVALENSI_TRANSKRIP { get; set; }
        public virtual DbSet<Acd_Curriculum_EKUIVALENSI_TRANSKRIP_LAMA> Acd_Curriculum_EKUIVALENSI_TRANSKRIP_LAMA { get; set; }
        public virtual DbSet<Acd_Curriculum_Entry_Year> Acd_Curriculum_Entry_Year { get; set; }
        public virtual DbSet<Acd_Curriculum_PERUBAHAN> Acd_Curriculum_PERUBAHAN { get; set; }
        public virtual DbSet<Acd_Department_Lecturer> Acd_Department_Lecturer { get; set; }
        public virtual DbSet<Acd_Education_History> Acd_Education_History { get; set; }
        public virtual DbSet<Acd_Exam_Sched> Acd_Exam_Sched { get; set; }
        public virtual DbSet<Acd_Exam_Sched_Detail> Acd_Exam_Sched_Detail { get; set; }
        public virtual DbSet<Acd_GPA_SKS> Acd_GPA_SKS { get; set; }
        public virtual DbSet<Acd_Grade_Department> Acd_Grade_Department { get; set; }
        public virtual DbSet<Acd_Grade_Letter> Acd_Grade_Letter { get; set; }
        public virtual DbSet<Acd_Graduation_Best> Acd_Graduation_Best { get; set; }
        public virtual DbSet<Acd_Graduation_Final> Acd_Graduation_Final { get; set; }
        public virtual DbSet<Acd_Graduation_Period> Acd_Graduation_Period { get; set; }
        public virtual DbSet<Acd_Graduation_Reg> Acd_Graduation_Reg { get; set; }
        public virtual DbSet<Acd_Graduation_Reg_Temp> Acd_Graduation_Reg_Temp { get; set; }
        public virtual DbSet<Acd_INTERNSHIP> Acd_INTERNSHIP { get; set; }
        public virtual DbSet<Acd_Kinerja> Acd_Kinerja { get; set; }
        public virtual DbSet<Acd_KinerjaFasilitas> Acd_KinerjaFasilitas { get; set; }
        public virtual DbSet<Acd_Offered_Course> Acd_Offered_Course { get; set; }
        public virtual DbSet<Acd_Offered_Course_Lecturer> Acd_Offered_Course_Lecturer { get; set; }
        public virtual DbSet<Acd_Offered_Course_Sched> Acd_Offered_Course_Sched { get; set; }
        public virtual DbSet<Acd_PREREQUISITE> Acd_PREREQUISITE { get; set; }
        public virtual DbSet<Acd_Sched_Real> Acd_Sched_Real { get; set; }
        public virtual DbSet<Acd_Sched_Room> Acd_Sched_Room { get; set; }
        public virtual DbSet<Acd_Sched_Session> Acd_Sched_Session { get; set; }
        public virtual DbSet<Acd_Sk_Publish> Acd_Sk_Publish { get; set; }
        public virtual DbSet<Acd_Student> Acd_Student { get; set; }
        public virtual DbSet<Acd_Student_Address> Acd_Student_Address { get; set; }
        public virtual DbSet<Acd_Student_Card> Acd_Student_Card { get; set; }
        public virtual DbSet<Acd_Student_Card_Temporary> Acd_Student_Card_Temporary { get; set; }
        public virtual DbSet<Acd_Student_History> Acd_Student_History { get; set; }
        public virtual DbSet<Acd_Student_Khs> Acd_Student_Khs { get; set; }
        public virtual DbSet<Acd_Student_KHS_DELETED> Acd_Student_KHS_DELETED { get; set; }
        public virtual DbSet<Acd_Student_Khs_Transfer> Acd_Student_Khs_Transfer { get; set; }
        public virtual DbSet<Acd_Student_Krs> Acd_Student_Krs { get; set; }
        public virtual DbSet<Acd_Student_other_rules> Acd_Student_other_rules { get; set; }
        public virtual DbSet<Acd_Student_Out> Acd_Student_Out { get; set; }
        public virtual DbSet<Acd_Student_Parent> Acd_Student_Parent { get; set; }
        public virtual DbSet<Acd_Student_PASSWORD> Acd_Student_PASSWORD { get; set; }
        public virtual DbSet<Acd_Student_Sched> Acd_Student_Sched { get; set; }
        public virtual DbSet<Acd_Student_Supervision> Acd_Student_Supervision { get; set; }
        public virtual DbSet<Acd_Thesis> Acd_Thesis { get; set; }
        public virtual DbSet<Acd_Transcript> Acd_Transcript { get; set; }
        public virtual DbSet<Acd_Transcript_Final> Acd_Transcript_Final { get; set; }
        public virtual DbSet<Acd_Yudisium> Acd_Yudisium { get; set; }
        public virtual DbSet<Adm_LOGIN_LOG> Adm_LOGIN_LOG { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Emp_Academic_Questioner_Result> Emp_Academic_Questioner_Result { get; set; }
        public virtual DbSet<Emp_Active_Status> Emp_Active_Status { get; set; }
        public virtual DbSet<Emp_akses_log> Emp_akses_log { get; set; }
        public virtual DbSet<Emp_Allowance_Structural> Emp_Allowance_Structural { get; set; }
        public virtual DbSet<Emp_Attendance> Emp_Attendance { get; set; }
        public virtual DbSet<Emp_Attendance_Allowance> Emp_Attendance_Allowance { get; set; }
        public virtual DbSet<Emp_Attendance_Fingerprint> Emp_Attendance_Fingerprint { get; set; }
        public virtual DbSet<Emp_Bank> Emp_Bank { get; set; }
        public virtual DbSet<Emp_Category_Haki> Emp_Category_Haki { get; set; }
        public virtual DbSet<Emp_Certificate_Competence> Emp_Certificate_Competence { get; set; }
        public virtual DbSet<Emp_Dedication> Emp_Dedication { get; set; }
        public virtual DbSet<Emp_Employee> Emp_Employee { get; set; }
        public virtual DbSet<Emp_Employee_Education> Emp_Employee_Education { get; set; }
        public virtual DbSet<Emp_Employee_Family> Emp_Employee_Family { get; set; }
        public virtual DbSet<Emp_Employee_Functional> Emp_Employee_Functional { get; set; }
        public virtual DbSet<Emp_Employee_Gol_> Emp_Employee_Gol_ { get; set; }
        public virtual DbSet<Emp_Employee_Other_Income> Emp_Employee_Other_Income { get; set; }
        public virtual DbSet<Emp_Employee_Other_Income_Type> Emp_Employee_Other_Income_Type { get; set; }
        public virtual DbSet<Emp_Employee_Status> Emp_Employee_Status { get; set; }
        public virtual DbSet<Emp_Employee_Structural> Emp_Employee_Structural { get; set; }
        public virtual DbSet<Emp_Family_Relation> Emp_Family_Relation { get; set; }
        public virtual DbSet<Emp_Fellowship> Emp_Fellowship { get; set; }
        public virtual DbSet<Emp_Functional_Position> Emp_Functional_Position { get; set; }
        public virtual DbSet<Emp_golongan> Emp_golongan { get; set; }
        public virtual DbSet<Emp_Handbook> Emp_Handbook { get; set; }
        public virtual DbSet<Emp_hari_libur> Emp_hari_libur { get; set; }
        public virtual DbSet<Emp_Identity_Type> Emp_Identity_Type { get; set; }
        public virtual DbSet<Emp_import_gaji> Emp_import_gaji { get; set; }
        public virtual DbSet<Emp_jadwal_akd> Emp_jadwal_akd { get; set; }
        public virtual DbSet<Emp_Journal> Emp_Journal { get; set; }
        public virtual DbSet<Emp_kepangkatan> Emp_kepangkatan { get; set; }
        public virtual DbSet<Emp_kunci_kehadiran> Emp_kunci_kehadiran { get; set; }
        public virtual DbSet<Emp_Loan> Emp_Loan { get; set; }
        public virtual DbSet<Emp_Loan_Installment> Emp_Loan_Installment { get; set; }
        public virtual DbSet<Emp_Loan_Type> Emp_Loan_Type { get; set; }
        public virtual DbSet<Emp_Organization_Membership> Emp_Organization_Membership { get; set; }
        public virtual DbSet<Emp_Patent> Emp_Patent { get; set; }
        public virtual DbSet<Emp_Payroll_Attribute> Emp_Payroll_Attribute { get; set; }
        public virtual DbSet<Emp_Placement> Emp_Placement { get; set; }
        public virtual DbSet<Emp_Position_Structural> Emp_Position_Structural { get; set; }
        public virtual DbSet<Emp_Poster> Emp_Poster { get; set; }
        public virtual DbSet<Emp_Postgraduate> Emp_Postgraduate { get; set; }
        public virtual DbSet<Emp_Publication> Emp_Publication { get; set; }
        public virtual DbSet<Emp_Publication_Oral> Emp_Publication_Oral { get; set; }
        public virtual DbSet<Emp_Reduction_Other> Emp_Reduction_Other { get; set; }
        public virtual DbSet<Emp_Research> Emp_Research { get; set; }
        public virtual DbSet<Emp_Research_Document> Emp_Research_Document { get; set; }
        public virtual DbSet<Emp_Role_Assignment> Emp_Role_Assignment { get; set; }
        public virtual DbSet<Emp_Scientific_Creation> Emp_Scientific_Creation { get; set; }
        public virtual DbSet<Emp_Scope_Activity> Emp_Scope_Activity { get; set; }
        public virtual DbSet<Emp_Social_Activity> Emp_Social_Activity { get; set; }
        public virtual DbSet<Emp_Teach_Kbk> Emp_Teach_Kbk { get; set; }
        public virtual DbSet<Emp_Teach_Kbk_Count> Emp_Teach_Kbk_Count { get; set; }
        public virtual DbSet<Emp_Teach_Kbk_Count_Resume> Emp_Teach_Kbk_Count_Resume { get; set; }
        public virtual DbSet<Emp_Textbook> Emp_Textbook { get; set; }
        public virtual DbSet<Emp_Topic> Emp_Topic { get; set; }
        public virtual DbSet<Emp_Training> Emp_Training { get; set; }
        public virtual DbSet<Emp_Vacation> Emp_Vacation { get; set; }
        public virtual DbSet<Emp_Vacation_Type> Emp_Vacation_Type { get; set; }
        public virtual DbSet<Emp_Visiting_Expert> Emp_Visiting_Expert { get; set; }
        public virtual DbSet<Emp_Work_Unit> Emp_Work_Unit { get; set; }
        public virtual DbSet<Fnc_Bank> Fnc_Bank { get; set; }
        public virtual DbSet<Fnc_Bank_Account> Fnc_Bank_Account { get; set; }
        public virtual DbSet<Fnc_Bill_Type> Fnc_Bill_Type { get; set; }
        public virtual DbSet<Fnc_Cash_Type> Fnc_Cash_Type { get; set; }
        public virtual DbSet<Fnc_Cost_Item> Fnc_Cost_Item { get; set; }
        public virtual DbSet<Fnc_Cost_Krs_Personal> Fnc_Cost_Krs_Personal { get; set; }
        public virtual DbSet<Fnc_Cost_Regular> Fnc_Cost_Regular { get; set; }
        public virtual DbSet<Fnc_Cost_Regular_Personal> Fnc_Cost_Regular_Personal { get; set; }
        public virtual DbSet<Fnc_Cost_Regular_Personal_Up> Fnc_Cost_Regular_Personal_Up { get; set; }
        public virtual DbSet<Fnc_Cost_Regular_Up> Fnc_Cost_Regular_Up { get; set; }
        public virtual DbSet<Fnc_Cost_Sched> Fnc_Cost_Sched { get; set; }
        public virtual DbSet<Fnc_Cost_Sched_Detail> Fnc_Cost_Sched_Detail { get; set; }
        public virtual DbSet<Fnc_Cost_Timing> Fnc_Cost_Timing { get; set; }
        public virtual DbSet<Fnc_Cost_Timing_Personal> Fnc_Cost_Timing_Personal { get; set; }
        public virtual DbSet<Fnc_Course_Cost_Package> Fnc_Course_Cost_Package { get; set; }
        public virtual DbSet<Fnc_Course_Cost_Sks> Fnc_Course_Cost_Sks { get; set; }
        public virtual DbSet<Fnc_Course_Cost_Type> Fnc_Course_Cost_Type { get; set; }
        public virtual DbSet<Fnc_Course_Type> Fnc_Course_Type { get; set; }
        public virtual DbSet<Fnc_Profession_MAHASISWA> Fnc_Profession_MAHASISWA { get; set; }
        public virtual DbSet<Fnc_Profession_PAYMENT> Fnc_Profession_PAYMENT { get; set; }
        public virtual DbSet<Fnc_Profession_PERIODE> Fnc_Profession_PERIODE { get; set; }
        public virtual DbSet<Fnc_Profession_PERIODE_MASA_BAYAR> Fnc_Profession_PERIODE_MASA_BAYAR { get; set; }
        public virtual DbSet<Fnc_Profession_REFF_PAYMENT> Fnc_Profession_REFF_PAYMENT { get; set; }
        public virtual DbSet<Fnc_Profession_TAGIHAN> Fnc_Profession_TAGIHAN { get; set; }
        public virtual DbSet<Fnc_Reff_Payment> Fnc_Reff_Payment { get; set; }
        public virtual DbSet<Fnc_Returns_Setting> Fnc_Returns_Setting { get; set; }
        public virtual DbSet<Fnc_Returns_Type> Fnc_Returns_Type { get; set; }
        public virtual DbSet<Fnc_Stage> Fnc_Stage { get; set; }
        public virtual DbSet<Fnc_Student_Payment> Fnc_Student_Payment { get; set; }
        public virtual DbSet<Fnc_Trans_Type> Fnc_Trans_Type { get; set; }
        public virtual DbSet<Mstr_Access_App_Group_> Mstr_Access_App_Group_ { get; set; }
        public virtual DbSet<Mstr_Address_Category> Mstr_Address_Category { get; set; }
        public virtual DbSet<Mstr_Application_> Mstr_Application_ { get; set; }
        public virtual DbSet<Mstr_Blood_Type> Mstr_Blood_Type { get; set; }
        public virtual DbSet<Mstr_Building> Mstr_Building { get; set; }
        public virtual DbSet<Mstr_Citizenship> Mstr_Citizenship { get; set; }
        public virtual DbSet<Mstr_City> Mstr_City { get; set; }
        public virtual DbSet<Mstr_Class> Mstr_Class { get; set; }
        public virtual DbSet<Mstr_Class_Program> Mstr_Class_Program { get; set; }
        public virtual DbSet<Mstr_Concentration> Mstr_Concentration { get; set; }
        public virtual DbSet<Mstr_Country> Mstr_Country { get; set; }
        public virtual DbSet<Mstr_Course_Type_Fnc> Mstr_Course_Type_Fnc { get; set; }
        public virtual DbSet<Mstr_Curriculum> Mstr_Curriculum { get; set; }
        public virtual DbSet<Mstr_Curriculum_Applied> Mstr_Curriculum_Applied { get; set; }
        public virtual DbSet<Mstr_Curriculum_Type> Mstr_Curriculum_Type { get; set; }
        public virtual DbSet<Mstr_Day> Mstr_Day { get; set; }
        public virtual DbSet<Mstr_Department> Mstr_Department { get; set; }
        public virtual DbSet<Mstr_Department_Class_Program> Mstr_Department_Class_Program { get; set; }
        public virtual DbSet<Mstr_Department_Event_Sched> Mstr_Department_Event_Sched { get; set; }
        public virtual DbSet<Mstr_Dispen_Type> Mstr_Dispen_Type { get; set; }
        public virtual DbSet<Mstr_District> Mstr_District { get; set; }
        public virtual DbSet<Mstr_Education_Group> Mstr_Education_Group { get; set; }
        public virtual DbSet<Mstr_Education_Program_Type> Mstr_Education_Program_Type { get; set; }
        public virtual DbSet<Mstr_Education_Type> Mstr_Education_Type { get; set; }
        public virtual DbSet<Mstr_Entry_Period> Mstr_Entry_Period { get; set; }
        public virtual DbSet<Mstr_Entry_Period_Type> Mstr_Entry_Period_Type { get; set; }
        public virtual DbSet<Mstr_Entry_Year> Mstr_Entry_Year { get; set; }
        public virtual DbSet<Mstr_Event_Category> Mstr_Event_Category { get; set; }
        public virtual DbSet<Mstr_Exam_Type> Mstr_Exam_Type { get; set; }
        public virtual DbSet<Mstr_Faculty> Mstr_Faculty { get; set; }
        public virtual DbSet<Mstr_Gender> Mstr_Gender { get; set; }
        public virtual DbSet<Mstr_Graduate_Predicate> Mstr_Graduate_Predicate { get; set; }
        public virtual DbSet<Mstr_High_School_Major> Mstr_High_School_Major { get; set; }
        public virtual DbSet<Mstr_Hobby> Mstr_Hobby { get; set; }
        public virtual DbSet<Mstr_Hobby_Categories> Mstr_Hobby_Categories { get; set; }
        public virtual DbSet<Mstr_JAM_KE> Mstr_JAM_KE { get; set; }
        public virtual DbSet<Mstr_Job_Category> Mstr_Job_Category { get; set; }
        public virtual DbSet<Mstr_komponen_nilai_> Mstr_komponen_nilai_ { get; set; }
        public virtual DbSet<Mstr_language_> Mstr_language_ { get; set; }
        public virtual DbSet<Mstr_Marital_Status> Mstr_Marital_Status { get; set; }
        public virtual DbSet<Mstr_Month> Mstr_Month { get; set; }
        public virtual DbSet<Mstr_Out_Reason> Mstr_Out_Reason { get; set; }
        public virtual DbSet<Mstr_Parent_Type> Mstr_Parent_Type { get; set; }
        public virtual DbSet<Mstr_Profession_> Mstr_Profession_ { get; set; }
        public virtual DbSet<Mstr_Profession_Department_> Mstr_Profession_Department_ { get; set; }
        public virtual DbSet<Mstr_Profession_JNS_ANGSURAN> Mstr_Profession_JNS_ANGSURAN { get; set; }
        public virtual DbSet<Mstr_Profession_TAGIHAN> Mstr_Profession_TAGIHAN { get; set; }
        public virtual DbSet<Mstr_Province> Mstr_Province { get; set; }
        public virtual DbSet<Mstr_Register_Status> Mstr_Register_Status { get; set; }
        public virtual DbSet<Mstr_Religion> Mstr_Religion { get; set; }
        public virtual DbSet<Mstr_Residence_Type> Mstr_Residence_Type { get; set; }
        public virtual DbSet<Mstr_Room> Mstr_Room { get; set; }
        public virtual DbSet<Mstr_Room_Capacity> Mstr_Room_Capacity { get; set; }
        public virtual DbSet<Mstr_Room_Usage_Type> Mstr_Room_Usage_Type { get; set; }
        public virtual DbSet<Mstr_Sched_Type> Mstr_Sched_Type { get; set; }
        public virtual DbSet<Mstr_School> Mstr_School { get; set; }
        public virtual DbSet<Mstr_School_Status> Mstr_School_Status { get; set; }
        public virtual DbSet<Mstr_Source_Fund> Mstr_Source_Fund { get; set; }
        public virtual DbSet<Mstr_Stage_Education> Mstr_Stage_Education { get; set; }
        public virtual DbSet<Mstr_Status> Mstr_Status { get; set; }
        public virtual DbSet<Mstr_STATUS_TRANSFER> Mstr_STATUS_TRANSFER { get; set; }
        public virtual DbSet<Mstr_Study_Level> Mstr_Study_Level { get; set; }
        public virtual DbSet<Mstr_Study_Limit_> Mstr_Study_Limit_ { get; set; }
        public virtual DbSet<Mstr_Subdistrict> Mstr_Subdistrict { get; set; }
        public virtual DbSet<Mstr_Supervision_CATEGORY> Mstr_Supervision_CATEGORY { get; set; }
        public virtual DbSet<Mstr_System_Identity_> Mstr_System_Identity_ { get; set; }
        public virtual DbSet<Mstr_Tarif_Tax> Mstr_Tarif_Tax { get; set; }
        public virtual DbSet<Mstr_Term> Mstr_Term { get; set; }
        public virtual DbSet<Mstr_Term_Category_> Mstr_Term_Category_ { get; set; }
        public virtual DbSet<Mstr_Term_Year> Mstr_Term_Year { get; set; }
        public virtual DbSet<Mstr_User> Mstr_User { get; set; }
        public virtual DbSet<Mstr_User_App_Access_Group_> Mstr_User_App_Access_Group_ { get; set; }
        public virtual DbSet<Mstr_User_App_Access_Right_> Mstr_User_App_Access_Right_ { get; set; }
        public virtual DbSet<Mstr_Working_Status_> Mstr_Working_Status_ { get; set; }
        public virtual DbSet<Mstr_z_jdw_kegiatan_> Mstr_z_jdw_kegiatan_ { get; set; }
        public virtual DbSet<Mstr_zxcv_level_> Mstr_zxcv_level_ { get; set; }
        public virtual DbSet<OPTIONS> OPTIONS { get; set; }
        public virtual DbSet<other_rules> other_rules { get; set; }
        public virtual DbSet<Reg_Access_GROUP> Reg_Access_GROUP { get; set; }
        public virtual DbSet<Reg_Access_RIGHT> Reg_Access_RIGHT { get; set; }
        public virtual DbSet<Reg_APP_QUA_FACTOR> Reg_APP_QUA_FACTOR { get; set; }
        public virtual DbSet<Reg_Application_FORM> Reg_Application_FORM { get; set; }
        public virtual DbSet<Reg_Camaru> Reg_Camaru { get; set; }
        public virtual DbSet<Reg_Camaru_Education_HISTORY> Reg_Camaru_Education_HISTORY { get; set; }
        public virtual DbSet<Reg_Camaru_ID_GENERATION> Reg_Camaru_ID_GENERATION { get; set; }
        public virtual DbSet<Reg_Camaru_MUNDUR> Reg_Camaru_MUNDUR { get; set; }
        public virtual DbSet<Reg_Camaru_ONLINE> Reg_Camaru_ONLINE { get; set; }
        public virtual DbSet<Reg_Camaru_RAPORT> Reg_Camaru_RAPORT { get; set; }
        public virtual DbSet<Reg_Camaru_ROOMS_GENERATION> Reg_Camaru_ROOMS_GENERATION { get; set; }
        public virtual DbSet<Reg_Group_TEST> Reg_Group_TEST { get; set; }
        public virtual DbSet<Reg_Group_TEST_RESULT> Reg_Group_TEST_RESULT { get; set; }
        public virtual DbSet<Reg_jabatan_penmaru> Reg_jabatan_penmaru { get; set; }
        public virtual DbSet<Reg_JNS_DAFTAR> Reg_JNS_DAFTAR { get; set; }
        public virtual DbSet<Reg_JNS_RAPORT> Reg_JNS_RAPORT { get; set; }
        public virtual DbSet<Reg_LOKASI> Reg_LOKASI { get; set; }
        public virtual DbSet<Reg_MAPEL> Reg_MAPEL { get; set; }
        public virtual DbSet<Reg_MAPEL_JNS_RAPORT> Reg_MAPEL_JNS_RAPORT { get; set; }
        public virtual DbSet<Reg_MATERI_TEST> Reg_MATERI_TEST { get; set; }
        public virtual DbSet<Reg_Offered_GROUP_TEST> Reg_Offered_GROUP_TEST { get; set; }
        public virtual DbSet<Reg_Offered_TEST> Reg_Offered_TEST { get; set; }
        public virtual DbSet<Reg_offerred_edu_program> Reg_offerred_edu_program { get; set; }
        public virtual DbSet<Reg_QUA_FACTOR> Reg_QUA_FACTOR { get; set; }
        public virtual DbSet<Reg_RAPORT> Reg_RAPORT { get; set; }
        public virtual DbSet<Reg_Registration_FEE> Reg_Registration_FEE { get; set; }
        public virtual DbSet<Reg_SOLD_FORMS> Reg_SOLD_FORMS { get; set; }
        public virtual DbSet<Reg_Tahap_MASUK_> Reg_Tahap_MASUK_ { get; set; }
        public virtual DbSet<Reg_Test_RESULT> Reg_Test_RESULT { get; set; }
        public virtual DbSet<Reg_Test_RESULT_TOTAL> Reg_Test_RESULT_TOTAL { get; set; }
        public virtual DbSet<Reg_Test_SCHEDULE> Reg_Test_SCHEDULE { get; set; }
        public virtual DbSet<Reg_Test_SCHEDULE_ROOMS> Reg_Test_SCHEDULE_ROOMS { get; set; }
        public virtual DbSet<Reg_z_Group_Program> Reg_z_Group_Program { get; set; }
        public virtual DbSet<Reg_z_Group_Program_Choice> Reg_z_Group_Program_Choice { get; set; }
        public virtual DbSet<rule_deadline> rule_deadline { get; set; }
        public virtual DbSet<SK_TYPE> SK_TYPE { get; set; }
        public virtual DbSet<status_UMY> status_UMY { get; set; }
        public virtual DbSet<SUB_LOKASI> SUB_LOKASI { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TANGGAL_TEMP> TANGGAL_TEMP { get; set; }
        public virtual DbSet<Acd_Gpa_TEMP> Acd_Gpa_TEMP { get; set; }
        public virtual DbSet<Acd_Graduation_PRODI_CLASS> Acd_Graduation_PRODI_CLASS { get; set; }
        public virtual DbSet<Acd_Student_FREE_SKS> Acd_Student_FREE_SKS { get; set; }
        public virtual DbSet<Acd_Student_KHS_PRAK> Acd_Student_KHS_PRAK { get; set; }
        public virtual DbSet<Acd_Student_KHS_PRAK_ASISTEN> Acd_Student_KHS_PRAK_ASISTEN { get; set; }
        public virtual DbSet<Acd_Student_KHS_PRAK_BOBOT> Acd_Student_KHS_PRAK_BOBOT { get; set; }
        public virtual DbSet<Acd_Student_KHS_PRAK_KOMP> Acd_Student_KHS_PRAK_KOMP { get; set; }
        public virtual DbSet<Acd_Student_KHS_PRAK_RANGE> Acd_Student_KHS_PRAK_RANGE { get; set; }
        public virtual DbSet<Acd_Student_setoran_> Acd_Student_setoran_ { get; set; }
        public virtual DbSet<Mstr_JAM_SESSI> Mstr_JAM_SESSI { get; set; }
        public virtual DbSet<Mstr_SKS_DURASI> Mstr_SKS_DURASI { get; set; }
        public virtual DbSet<pbcatedt> pbcatedt { get; set; }
        public virtual DbSet<pbcatfmt> pbcatfmt { get; set; }
        public virtual DbSet<pbcatvld> pbcatvld { get; set; }
        public virtual DbSet<Reg_Camaru_Choice_DELETED> Reg_Camaru_Choice_DELETED { get; set; }
        public virtual DbSet<Reg_Camaru_DELETED> Reg_Camaru_DELETED { get; set; }
        public virtual DbSet<Reg_Total_ACCEPTANCE_POLICY> Reg_Total_ACCEPTANCE_POLICY { get; set; }
    
        [DbFunction("SIAEntities", "uf_tagihan_non_deposit")]
        public virtual IQueryable<uf_tagihan_non_deposit_Result> uf_tagihan_non_deposit(string pembayar)
        {
            var pembayarParameter = pembayar != null ?
                new ObjectParameter("pembayar", pembayar) :
                new ObjectParameter("pembayar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<uf_tagihan_non_deposit_Result>("[SIAEntities].[uf_tagihan_non_deposit](@pembayar)", pembayarParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_CrossTab(string select, string pivotCol, string summaries, string groupBy, string orderCol, string orderByRow, string otherCols)
        {
            var selectParameter = select != null ?
                new ObjectParameter("Select", select) :
                new ObjectParameter("Select", typeof(string));
    
            var pivotColParameter = pivotCol != null ?
                new ObjectParameter("PivotCol", pivotCol) :
                new ObjectParameter("PivotCol", typeof(string));
    
            var summariesParameter = summaries != null ?
                new ObjectParameter("Summaries", summaries) :
                new ObjectParameter("Summaries", typeof(string));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("GroupBy", groupBy) :
                new ObjectParameter("GroupBy", typeof(string));
    
            var orderColParameter = orderCol != null ?
                new ObjectParameter("OrderCol", orderCol) :
                new ObjectParameter("OrderCol", typeof(string));
    
            var orderByRowParameter = orderByRow != null ?
                new ObjectParameter("OrderByRow", orderByRow) :
                new ObjectParameter("OrderByRow", typeof(string));
    
            var otherColsParameter = otherCols != null ?
                new ObjectParameter("OtherCols", otherCols) :
                new ObjectParameter("OtherCols", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrossTab", selectParameter, pivotColParameter, summariesParameter, groupByParameter, orderColParameter, orderByRowParameter, otherColsParameter);
        }
    
        public virtual int sp_CrossTab2(string select, string tableStructure, string pivotCol, string summaries, string groupBy, string orderCol, string orderByRow)
        {
            var selectParameter = select != null ?
                new ObjectParameter("Select", select) :
                new ObjectParameter("Select", typeof(string));
    
            var tableStructureParameter = tableStructure != null ?
                new ObjectParameter("TableStructure", tableStructure) :
                new ObjectParameter("TableStructure", typeof(string));
    
            var pivotColParameter = pivotCol != null ?
                new ObjectParameter("PivotCol", pivotCol) :
                new ObjectParameter("PivotCol", typeof(string));
    
            var summariesParameter = summaries != null ?
                new ObjectParameter("Summaries", summaries) :
                new ObjectParameter("Summaries", typeof(string));
    
            var groupByParameter = groupBy != null ?
                new ObjectParameter("GroupBy", groupBy) :
                new ObjectParameter("GroupBy", typeof(string));
    
            var orderColParameter = orderCol != null ?
                new ObjectParameter("OrderCol", orderCol) :
                new ObjectParameter("OrderCol", typeof(string));
    
            var orderByRowParameter = orderByRow != null ?
                new ObjectParameter("OrderByRow", orderByRow) :
                new ObjectParameter("OrderByRow", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CrossTab2", selectParameter, tableStructureParameter, pivotColParameter, summariesParameter, groupByParameter, orderColParameter, orderByRowParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetAllowedSKSForKRS(Nullable<short> termyear, Nullable<long> student)
        {
            var termyearParameter = termyear.HasValue ?
                new ObjectParameter("termyear", termyear) :
                new ObjectParameter("termyear", typeof(short));
    
            var studentParameter = student.HasValue ?
                new ObjectParameter("student", student) :
                new ObjectParameter("student", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetAllowedSKSForKRS", termyearParameter, studentParameter);
        }
    
        public virtual ObjectResult<usp_GetClassInfoForKRS_Result> usp_GetClassInfoForKRS(Nullable<short> termyear, Nullable<short> department, Nullable<short> classprog, Nullable<int> courseid, Nullable<short> classid)
        {
            var termyearParameter = termyear.HasValue ?
                new ObjectParameter("termyear", termyear) :
                new ObjectParameter("termyear", typeof(short));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(short));
    
            var classprogParameter = classprog.HasValue ?
                new ObjectParameter("classprog", classprog) :
                new ObjectParameter("classprog", typeof(short));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            var classidParameter = classid.HasValue ?
                new ObjectParameter("classid", classid) :
                new ObjectParameter("classid", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClassInfoForKRS_Result>("usp_GetClassInfoForKRS", termyearParameter, departmentParameter, classprogParameter, courseidParameter, classidParameter);
        }
    
        public virtual ObjectResult<usp_GetCourseCostForKRS_Result> usp_GetCourseCostForKRS(Nullable<short> termyear, Nullable<short> department, Nullable<short> classprog, Nullable<short> entryyear, Nullable<int> courseid)
        {
            var termyearParameter = termyear.HasValue ?
                new ObjectParameter("termyear", termyear) :
                new ObjectParameter("termyear", typeof(short));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(short));
    
            var classprogParameter = classprog.HasValue ?
                new ObjectParameter("classprog", classprog) :
                new ObjectParameter("classprog", typeof(short));
    
            var entryyearParameter = entryyear.HasValue ?
                new ObjectParameter("entryyear", entryyear) :
                new ObjectParameter("entryyear", typeof(short));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCourseCostForKRS_Result>("usp_GetCourseCostForKRS", termyearParameter, departmentParameter, classprogParameter, entryyearParameter, courseidParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferredCourseClassForKRS_Result> usp_GetOfferredCourseClassForKRS(Nullable<short> termyear, Nullable<short> department, Nullable<short> classprog, Nullable<short> entryyear, Nullable<int> courseid)
        {
            var termyearParameter = termyear.HasValue ?
                new ObjectParameter("termyear", termyear) :
                new ObjectParameter("termyear", typeof(short));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(short));
    
            var classprogParameter = classprog.HasValue ?
                new ObjectParameter("classprog", classprog) :
                new ObjectParameter("classprog", typeof(short));
    
            var entryyearParameter = entryyear.HasValue ?
                new ObjectParameter("entryyear", entryyear) :
                new ObjectParameter("entryyear", typeof(short));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferredCourseClassForKRS_Result>("usp_GetOfferredCourseClassForKRS", termyearParameter, departmentParameter, classprogParameter, entryyearParameter, courseidParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferredCourseForKRS_Result> usp_GetOfferredCourseForKRS(Nullable<short> termyear, Nullable<short> department, Nullable<short> classprog, Nullable<short> entryyear)
        {
            var termyearParameter = termyear.HasValue ?
                new ObjectParameter("termyear", termyear) :
                new ObjectParameter("termyear", typeof(short));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(short));
    
            var classprogParameter = classprog.HasValue ?
                new ObjectParameter("classprog", classprog) :
                new ObjectParameter("classprog", typeof(short));
    
            var entryyearParameter = entryyear.HasValue ?
                new ObjectParameter("entryyear", entryyear) :
                new ObjectParameter("entryyear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferredCourseForKRS_Result>("usp_GetOfferredCourseForKRS", termyearParameter, departmentParameter, classprogParameter, entryyearParameter);
        }
    
        public virtual ObjectResult<usp_GetOfferredCourseForKRSByStudent_Result> usp_GetOfferredCourseForKRSByStudent(Nullable<short> termyear, Nullable<short> department, Nullable<short> classprog, Nullable<short> entryyear, Nullable<long> studentid)
        {
            var termyearParameter = termyear.HasValue ?
                new ObjectParameter("termyear", termyear) :
                new ObjectParameter("termyear", typeof(short));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(short));
    
            var classprogParameter = classprog.HasValue ?
                new ObjectParameter("classprog", classprog) :
                new ObjectParameter("classprog", typeof(short));
    
            var entryyearParameter = entryyear.HasValue ?
                new ObjectParameter("entryyear", entryyear) :
                new ObjectParameter("entryyear", typeof(short));
    
            var studentidParameter = studentid.HasValue ?
                new ObjectParameter("studentid", studentid) :
                new ObjectParameter("studentid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOfferredCourseForKRSByStudent_Result>("usp_GetOfferredCourseForKRSByStudent", termyearParameter, departmentParameter, classprogParameter, entryyearParameter, studentidParameter);
        }
    
        public virtual ObjectResult<usp_Saldo_Result> usp_Saldo(Nullable<long> student_Id, Nullable<short> term_Year_Id)
        {
            var student_IdParameter = student_Id.HasValue ?
                new ObjectParameter("Student_Id", student_Id) :
                new ObjectParameter("Student_Id", typeof(long));
    
            var term_Year_IdParameter = term_Year_Id.HasValue ?
                new ObjectParameter("Term_Year_Id", term_Year_Id) :
                new ObjectParameter("Term_Year_Id", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Saldo_Result>("usp_Saldo", student_IdParameter, term_Year_IdParameter);
        }
    }
}
