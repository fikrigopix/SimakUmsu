@model SIA_Universitas.Models.Acd_Sched_Session

@{
    ViewBag.Title = "SchedSession";
    short? termYearId = ViewBag.termYear.Term_Year_Id;
    short? schedTypeId = ViewBag.schedType.Sched_Type_Id;
    string termYearName = ViewBag.termYear.Term_Year_Name;
    string schedTypeName = ViewBag.schedType.Sched_Type_Name;
    string UrlReferrer = ViewBag.UrlReferrer;
}

<h3>Sesi Jadwal Kuliah</h3>
<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default bootstrap-admin-no-table-panel">
            <div class="panel-heading">
                <div class="pull-right">
                    <a href="@UrlReferrer" title="Batal"><i class="badge">Batal</i></a>
                </div>
                <div class="bootstrap-admin-box-title right text-success">
                    <b>Tambah data</b>
                </div>
            </div>
            <div class="bootstrap-admin-panel-content bootstrap-admin-no-table-panel-content collapse in">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myFormId" })) 
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("UrlReferrer", UrlReferrer)
    
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sched_Type_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBox("Sched_Type_Name", schedTypeName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                @Html.Hidden("Sched_Type_Id", schedTypeId)
                                @Html.ValidationMessageFor(model => model.Sched_Type_Id)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Term_Year_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBox("Term_Year_Name", termYearName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                @Html.Hidden("Term_Year_Id", termYearId)
                                @Html.ValidationMessageFor(model => model.Term_Year_Id)
                            </div>
                        </div>
                        @if (ViewBag.Day != null && ViewBag.Order != null)
                        {
                            short? DayId = ViewBag.Day.Day_Id;
                            short? Order = ViewBag.Order;
                            string dayName = ViewBag.Day.Day_Name;
                            @Html.Hidden("param", 1)
                            <div class="form-group">
                                @Html.LabelFor(model => model.Day_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBox("Day_Name", dayName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                                    @Html.Hidden("Day_Id", DayId)
                                    @Html.ValidationMessageFor(model => model.Day_Id)
                                </div>
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Order_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-2">
                                    @Html.TextBox("Order_Id", Order, new { @class = "form-control", @readonly = "readonly" })
                                    @*@Html.HiddenFor(model => model.Order_Id)*@
                                </div>
                                @Html.ValidationMessageFor(model => model.Order_Id)
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Day_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @*@Html.DropDownList("Day_Id", null, "", htmlAttributes: new { @class = "form-control" })*@
                                    @Html.DropDownListFor(model => model.Day_Id, new SelectList(ViewBag.Day_Id as System.Collections.IEnumerable, "Day_Id", "Day_Name"), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Day_Id)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Order_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-2">
                                    @*@Html.DropDownList("Order_Id", null, "", htmlAttributes: new { @class = "form-control" })*@
                                    @Html.DropDownListFor(model => model.Order_Id, new SelectList(ViewBag.Order_Id as System.Collections.IEnumerable, "Id", "Value"), "", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Order_Id)
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.Class_Prog_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("Class_Prog_Id", null, "", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Class_Prog_Id)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Time_Start, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Time_Start, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Time_Start)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Time_End, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Time_End, new { @class="form-control" })
                                @Html.ValidationMessageFor(model => model.Time_End)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <button type="submit" name="submit" class="btn btn-success">
                                    Simpan <span class="glyphicon glyphicon-floppy-save" style="color:white" aria-hidden="true"></span>
                                </button>
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">*@
                                @Html.HiddenFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Created_By, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Created_By)
                                @Html.ValidationMessageFor(model => model.Created_By)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Created_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.Hidden("Created_Date", DateTime.Now)
                                @Html.ValidationMessageFor(model => model.Created_Date)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Modified_By, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Modified_By)
                                @Html.ValidationMessageFor(model => model.Modified_By)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Modified_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Modified_Date)
                                @Html.ValidationMessageFor(model => model.Modified_Date)
                            @*</div>
                        </div>*@
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>*@
    <script type="text/javascript">
    function initializeRemotelyValidatingElementsWithAdditionalFields($form) {
        var remotelyValidatingElements = $form.find("[data-val-remote]");

        $.each(remotelyValidatingElements, function (i, element) {
            var $element = $(element);

            var additionalFields = $element.attr("data-val-remote-additionalfields");

            if (additionalFields.length == 0) return;

            var rawFieldNames = additionalFields.split(",");

            var fieldNames = $.map(rawFieldNames, function (fieldName) { return fieldName.replace("*.", ""); });

            $.each(fieldNames, function (i, fieldName) {
                $form.find("#" + fieldName).change(function () {
                    // force re-validation to occur
                    $element.removeData("previousValue");
                    $element.valid();
                });
            });
        });
    }

    $(document).ready(function () {
        initializeRemotelyValidatingElementsWithAdditionalFields($("#myFormId"));
    });
    </script>
}
