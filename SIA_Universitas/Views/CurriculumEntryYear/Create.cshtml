@model SIA_Universitas.Models.Acd_Curriculum_Entry_Year

@{
    ViewBag.Title = "CurriculumEntryYear";
    short Term_Year_Id = ViewBag.Term_Year.Term_Year_Id;
    short Department_Id = ViewBag.Department.Department_Id;
    short? EntryYearId = ViewBag.EntryYearId;
    string UrlReferrer = ViewBag.UrlReferrer;
}

<h3>Kurikulum Angkatan</h3>
<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default bootstrap-admin-no-table-panel">
            <div class="panel-heading">
                <div class="pull-right">
                    <a href="@UrlReferrer" title="Batal"><i class="badge">Batal</i></a>
                </div>
                <div class="bootstrap-admin-box-title right text-success">
                    <b>Tambah Data</b>
                </div>
            </div>
            <div class="bootstrap-admin-panel-content bootstrap-admin-no-table-panel-content collapse in">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myFormId" })) 
                {
                    @Html.AntiForgeryToken()
    
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        @Html.Hidden("UrlReferrer", UrlReferrer)
                        <div class="form-group">
                            @Html.LabelFor(model => model.Term_Year_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @ViewBag.Term_Year.Term_Year_Name
                                @Html.Hidden("Term_Year_Id", Term_Year_Id)
                                @Html.ValidationMessageFor(model => model.Term_Year_Id)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Department_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @ViewBag.Department.Department_Name
                                @Html.Hidden("Department_Id", Department_Id)
                                @Html.ValidationMessageFor(model => model.Department_Id)
                            </div>
                        </div>
                        @if (ViewBag.Angkatan != null && ViewBag.ClassProg != null)
                        {
                            short Entry_Year_Id = ViewBag.EntryYears.Entry_Year_Id;
                            short Class_Prog_Id = ViewBag.ClassProgs.Class_Prog_Id;

                            <div class="form-group">
                                @Html.LabelFor(model => model.Entry_Year_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @ViewBag.EntryYears.Entry_Year_Name
                                    @Html.Hidden("Entry_Year_Id", Entry_Year_Id)
                                    @Html.ValidationMessageFor(model => model.Entry_Year_Id)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Class_Prog_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @ViewBag.ClassProgs.Class_Program_Name
                                    @Html.Hidden("Class_Prog_Id", Class_Prog_Id)
                                    @Html.ValidationMessageFor(model => model.Class_Prog_Id)
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Entry_Year_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Entry_Year_Id, new SelectList(ViewBag.EntryYears as System.Collections.IEnumerable, "Entry_Year_Id", "Entry_Year_Name", EntryYearId), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Entry_Year_Id)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Class_Prog_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.Class_Prog_Id, new SelectList(ViewBag.ClassProgs as System.Collections.IEnumerable, "Class_Prog_Id", "Mstr_Class_Program.Class_Program_Name"), "", new { @class = "form-control", onchange = "SelectionChanged()" })
                                    @Html.ValidationMessageFor(model => model.Class_Prog_Id)
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.Curriculum_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Curriculum_Id, new SelectList(ViewBag.Curriculums as System.Collections.IEnumerable, "Curriculum_Id", "Mstr_Curriculum.Curriculum_Name"), "", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Curriculum_Id)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <button type="submit" name="submit" class="btn btn-success">
                                    Simpan <span class="glyphicon glyphicon-floppy-save" style="color:white" aria-hidden="true"></span>
                                </button>
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Created_By, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Created_By)
                                @Html.ValidationMessageFor(model => model.Created_By)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Created_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.Hidden("Created_Date", DateTime.Now)
                                @Html.ValidationMessageFor(model => model.Created_Date)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Modified_By, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Modified_By)
                                @Html.ValidationMessageFor(model => model.Modified_By)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Modified_Date, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Modified_Date)
                                @Html.ValidationMessageFor(model => model.Modified_Date)
                            @*</div>
                        </div>*@

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Order_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">*@
                                @Html.HiddenFor(model => model.Order_Id)
                                @Html.ValidationMessageFor(model => model.Order_Id)
                            @*</div>
                        </div>*@
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>*@
    <script type="text/javascript">
    function initializeRemotelyValidatingElementsWithAdditionalFields($form) {
        var remotelyValidatingElements = $form.find("[data-val-remote]");

        $.each(remotelyValidatingElements, function (i, element) {
            var $element = $(element);

            var additionalFields = $element.attr("data-val-remote-additionalfields");

            if (additionalFields.length == 0) return;

            var rawFieldNames = additionalFields.split(",");

            var fieldNames = $.map(rawFieldNames, function (fieldName) { return fieldName.replace("*.", ""); });

            $.each(fieldNames, function (i, fieldName) {
                $form.find("#" + fieldName).change(function () {
                    // force re-validation to occur
                    $element.removeData("previousValue");
                    $element.valid();
                });
            });
        });
    }

    $(document).ready(function () {
        initializeRemotelyValidatingElementsWithAdditionalFields($("#myFormId"));
    });
    </script>
    <script>
        function SelectionChanged() {
            var CourseId = $("#Class_Prog_Id").val();
            var EntryYearId = $("#Entry_Year_Id").val();
            var url = '@Html.Raw(Url.Action("Create", "CurriculumEntryYear", new { Term_Year_Id = Term_Year_Id, Department_Id = Department_Id, Class_Prog_Id = -1, EntryYearId = -2, UrlReferrer = UrlReferrer }))';
            url = url.replace(-1, CourseId); //replace -1 with CourseId
            url = url.replace(-2, EntryYearId); //replace -2 with EntryYearId
            window.location = url;
        }
    </script>
}
